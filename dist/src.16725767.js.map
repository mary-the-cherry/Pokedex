{"version":3,"sources":["index.js"],"names":["pokemonListe","document","querySelector","pokemoncard","pokemonCardFull","btnSeachPokemon","inputPokemonSearch","btnPaginationPrev","btnPaginationItem1","btnPaginationItem2","btnPaginationItem3","btnPaginationNext","body","countingPokemons","actualPage","globalPokemonlist","jsUcfirst","string","charAt","toUpperCase","slice","fetchPokemonList","fetch","then","response","json","allpokemons","results","forEach","pokemon","pokemonListeName","createElement","innerHTML","name","addEventListener","newPokemonPage","appendChild","push","fetchPokemonCardsDefault","url","pokemons","getPokemon","catch","err","console","log","pokemondata","creatCardDeck","createPokemonCard","cardDeck","className","card","classList","add","cardBody","cardTitle","cardText","id","order","base_experience","append","cardImg","getPokemonImage","lastChild","style","color","sprites","other","dream_world","front_default","blob","pokeImg","URL","createObjectURL","setAttribute","result","createTypeField","cardTextAttributes","pokemonType","types","pokemontype","type","pokemonName","createFullCard","display","overflow","textContent","join","abilities","ability","stats","stat","weight","height","searchPokemon","inputPokemonValue","value","toLowerCase","replace","defaultPage","querySelectorAll","paginationItem","remove","parentNode","filter","includes","paginationItemLoad","page","window","scrollTo","paginationPrev","Number","parentElement","paginationNext","event","keyCode","preventDefault","contains"],"mappings":"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","file":"src.16725767.js","sourceRoot":"..\\src","sourcesContent":["const pokemonListe = document.querySelector('.pokemonliste ul');\r\nconst pokemoncard = document.querySelector('.pokemoncard');\r\nconst pokemonCardFull = document.querySelector('.pokemoncardFullWrapper');\r\nconst btnSeachPokemon = document.querySelector('#btnSeachPokemon');\r\nconst inputPokemonSearch = document.querySelector('#inputPokemonSearch');\r\nconst btnPaginationPrev = document.querySelector('#pagination-item-prev');\r\nconst btnPaginationItem1 = document.querySelector('#pagination-item-one');\r\nconst btnPaginationItem2 = document.querySelector('#pagination-item-two');\r\nconst btnPaginationItem3 = document.querySelector('#pagination-item-three');\r\nconst btnPaginationNext = document.querySelector('#pagination-item-next');\r\nconst body = document.body;\r\nvar countingPokemons = 0;\r\nvar actualPage = 1;\r\nvar globalPokemonlist = [];\r\n\r\nfunction jsUcfirst(string) {\r\n  /*Function to convert the first letter to a capital letter*/\r\n\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nfunction fetchPokemonList() {\r\n  /*Function to get list of pokemons, store this list on left side of the page*/\r\n\r\n  fetch('https://pokeapi.co/api/v2/pokemon?limit=600')\r\n    .then((response) => response.json())\r\n    .then((allpokemons) => {\r\n      allpokemons.results.forEach((pokemon) => {\r\n        //creat a list element for each pokemon and add to HTML ul element pokemonList\r\n        let pokemonListeName = document.createElement('li');\r\n        pokemonListeName.innerHTML = `<p> ${jsUcfirst(pokemon.name)} </p>`;\r\n        pokemonListeName.addEventListener(\r\n          'click',\r\n          function () {\r\n            //each li is a clickable element to open further details\r\n            let pokemonName = pokemon.name;\r\n            newPokemonPage(pokemonName);\r\n          },\r\n          false\r\n        );\r\n        pokemonListe.appendChild(pokemonListeName);\r\n        globalPokemonlist.push(pokemon); //generate a global Array of all loaded pokemons\r\n      });\r\n    });\r\n}\r\n\r\nfunction fetchPokemonCardsDefault(url) {\r\n  fetch(url) //fetch pokemonlist\r\n    .then((response) => response.json())\r\n    .then(function (pokemons) {\r\n      //load all data of each pokemon\r\n      pokemons.results.forEach((pokemon) => getPokemon(pokemon));\r\n    })\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\nfunction getPokemon(pokemon) {\r\n  /*function to fetch detailed information from a single pokemon,\r\n   * create a card-deck and a card for the pokemon*/\r\n\r\n  if (true) {\r\n    fetch(pokemon.url)\r\n      .then((response) => response.json())\r\n      .then(function (pokemondata) {\r\n        //creat after each third card a new card-deck, increase counter for card-deck\r\n        creatCardDeck(countingPokemons, pokemoncard);\r\n        countingPokemons++;\r\n\r\n        return pokemondata;\r\n      })\r\n      .then((pokemondata) => {\r\n        //create a new pokemon card with fetched data\r\n        createPokemonCard(pokemondata, pokemoncard);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n}\r\n\r\nfunction creatCardDeck(countingPokemons, pokemoncard) {\r\n  //creat after each third card a new card-deck\r\n  if (countingPokemons % 3 === 0) {\r\n    let cardDeck = document.createElement('div');\r\n    cardDeck.className = 'card-deck';\r\n    pokemoncard.appendChild(cardDeck);\r\n  }\r\n}\r\n\r\nfunction createPokemonCard(pokemondata, pokemoncard) {\r\n  // create card and add styling\r\n  let card = document.createElement('div');\r\n  card.className = 'card';\r\n  card.classList.add('cardstyle');\r\n\r\n  //create card body\r\n  let cardBody = document.createElement('div');\r\n\r\n  // create title and add Pokemon name as title to card\r\n  let cardTitle = document.createElement('div');\r\n  cardTitle.className = 'card-title';\r\n  cardTitle.innerHTML = `<h3>${jsUcfirst(pokemondata.name)}</h3>`;\r\n  cardBody.appendChild(cardTitle);\r\n\r\n  // add data to card\r\n  let cardText = document.createElement('div');\r\n  cardText.className = 'card-text';\r\n  cardText.innerHTML = `<p> ID: <strong>${pokemondata.id}</strong> &nbsp &nbsp Order: <strong>${pokemondata.order}</strong> &nbsp &nbsp\r\n                                    Base-Exp.: <strong>${pokemondata.base_experience}</strong> </p>`;\r\n  cardBody.append(cardText);\r\n\r\n  //add card body to card\r\n  card.appendChild(cardBody);\r\n\r\n  // fetch pic, battle attributes and add to card\r\n  let cardImg = document.createElement('img');\r\n  cardImg.className = 'card-img-top';\r\n  getPokemonImage(pokemondata, cardImg, card);\r\n\r\n  //append card to homepage\r\n  pokemoncard.lastChild.appendChild(card);\r\n\r\n  //add a EventListner to open more details of a pokemon on a click\r\n  card.addEventListener(\r\n    'click',\r\n    function () {\r\n      let pokemonName = pokemondata.name;\r\n      newPokemonPage(pokemonName);\r\n      this.style.color = 'red';\r\n    },\r\n    false\r\n  );\r\n}\r\n\r\nfunction getPokemonImage(pokemondata, cardImg, card) {\r\n  /*get the image via fetch, define it as a blob and then add it to the card,\r\n   * add some type attributes as text to the card*/\r\n\r\n  //fetch pic and store in card-img\r\n  fetch(pokemondata.sprites.other.dream_world.front_default)\r\n    .then((response) => response.blob())\r\n    .then((blob) => {\r\n      let pokeImg = URL.createObjectURL(blob);\r\n      cardImg.setAttribute('src', pokeImg);\r\n      return cardImg;\r\n    })\r\n    .then((cardImg) => card.appendChild(cardImg))\r\n    .then((result) => {\r\n      //create a textfield with the Type of the pokemon and add it to the card\r\n      createTypeField(pokemondata, card);\r\n    })\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\nfunction createTypeField(pokemondata, card) {\r\n  //add all pokemontypes in an extra field below the img\r\n\r\n  //create textfield and add classes\r\n  let cardTextAttributes = document.createElement('div');\r\n  cardTextAttributes.className = 'card-text';\r\n  cardTextAttributes.classList.add('cardAttributeField');\r\n\r\n  //add all types of the pokemon in a p-element\r\n  let pokemonType = document.createElement('p');\r\n  pokemondata.types.forEach((pokemontype) => {\r\n    pokemonType.innerHTML += `<span> ${jsUcfirst(\r\n      pokemontype.type.name\r\n    )} </span>`;\r\n    cardTextAttributes.appendChild(pokemonType);\r\n  });\r\n\r\n  //add textfield to card\r\n  card.appendChild(cardTextAttributes);\r\n}\r\n\r\nfunction newPokemonPage(pokemonName) {\r\n  //opens a extra big card with addional information of the pokemon\r\n\r\n  //merge the url for a certain pokemon\r\n  let urlPokemon = 'https://pokeapi.co/api/v2/pokemon/' + pokemonName;\r\n\r\n  //fetch the data of the pokemon\r\n  fetch(urlPokemon)\r\n    .then((response) => response.json())\r\n    .then((pokemon) => {\r\n      //create a new card with detailed indormation\r\n      createFullCard(pokemon);\r\n    });\r\n\r\n  document.querySelector('.close').addEventListener('click', function () {\r\n    pokemonCardFull.style.display = 'none';\r\n    body.style.overflow = 'auto';\r\n  });\r\n}\r\n\r\nfunction createFullCard(pokemon) {\r\n  /*Design of a new card with detailed information of a pokemon\r\n   * with name,point,type,effects,fightskills,weight,height*/\r\n\r\n  //add Name and points to card\r\n  document.querySelector('#pokemoncardFullName').textContent = jsUcfirst(\r\n    pokemon.name\r\n  );\r\n  document.querySelector(\r\n    '#pokemoncardFullNumbers'\r\n  ).innerHTML = `ID: <strong>${pokemon.id}</strong> &nbsp &nbsp Order: <strong>${pokemon.order}</strong> &nbsp &nbsp\r\n                                    Base-Exp.: <strong>${pokemon.base_experience}</strong>`;\r\n\r\n  //loop through all types and add to a array, add array to HTML document\r\n  let types = [];\r\n  pokemon.types.forEach((type) => types.push(jsUcfirst(type.type.name)));\r\n  document.querySelector('#pokemoncardFullType').innerHTML =\r\n    '<strong>Type:</strong> ' + types.join(', ');\r\n\r\n  //loop through all abilities and add to a array, add array to HTML document\r\n  let abilities = [];\r\n  pokemon.abilities.forEach((ability) =>\r\n    abilities.push(jsUcfirst(ability.ability.name))\r\n  );\r\n  document.querySelector('#pokemoncardEffects').innerHTML =\r\n    '<strong>Abilities:</strong> ' + abilities.join(', ');\r\n\r\n  //loop through all stats and add to a array, add array to HTML document\r\n  let stats = [];\r\n  pokemon.stats.forEach((stat) => stats.push(jsUcfirst(stat.stat.name)));\r\n  document.querySelector('#pokemoncardFullKampf').innerHTML =\r\n    '<strong>Fightskills:</strong> ' + stats.join(', ');\r\n\r\n  //add height and weight\r\n  document.querySelector(\r\n    '#pokemoncardFullWeight'\r\n  ).innerHTML = `<strong>Weight:</strong> ${pokemon.weight} g`;\r\n  document.querySelector(\r\n    '#pokemoncardFullHeight'\r\n  ).innerHTML = `<strong>Height:</strong> ${pokemon.height} cm`;\r\n\r\n  //add image as blob to card and make card visible\r\n  fetch(pokemon.sprites.other.dream_world.front_default)\r\n    .then((response) => response.blob())\r\n    .then((blob) => {\r\n      let pokeImg = URL.createObjectURL(blob);\r\n      document\r\n        .querySelector('#pokemoncardFullImg')\r\n        .setAttribute('src', pokeImg);\r\n      return pokeImg;\r\n    })\r\n    .then((pokeImg) => {\r\n      pokemonCardFull.style.display = 'block';\r\n      pokemonCardFull.style.overflow = 'auto';\r\n      body.style.overflow = 'hidden';\r\n    })\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\nfunction searchPokemon() {\r\n  /* Search for Pokemons which includes value of the Search input */\r\n\r\n  console.log('search');\r\n  let inputPokemonValue = inputPokemonSearch.value\r\n    .toLowerCase()\r\n    .replace(/\\s/g, ''); //to lower case and without whitespaces\r\n  defaultPage();\r\n\r\n  //without input value the default list of the first 20 pokemons is load\r\n  if (inputPokemonValue === '') {\r\n    fetchPokemonCardsDefault('https://pokeapi.co/api/v2/pokemon?limit=20');\r\n    document\r\n      .querySelectorAll('.pagination li')\r\n      .forEach((paginationItem) => paginationItem.classList.remove('active'));\r\n\r\n    //set pagination to default and first item active\r\n    btnPaginationItem1.textContent = 1;\r\n    btnPaginationItem2.textContent = 2;\r\n    btnPaginationItem3.textContent = 3;\r\n    btnPaginationItem1.parentNode.classList.add('active');\r\n\r\n    //enalble view of pagination\r\n    document.querySelector('.pokemonPagintion').style.display = 'block';\r\n  } else {\r\n    globalPokemonlist\r\n      .filter((pokemon) => pokemon.name.includes(inputPokemonValue))\r\n      .forEach((pokemon) => {\r\n        //get pokemons which fulfill filter\r\n        getPokemon(pokemon);\r\n      });\r\n    //disable view of pagination\r\n    document.querySelector('.pokemonPagintion').style.display = 'none';\r\n  }\r\n}\r\n\r\nfunction defaultPage() {\r\n  /*sets everything to a status,that a plain page for new pokemon cards is loaded*/\r\n\r\n  pokemoncard.innerHTML = \"<div class='card-deck'><div>\"; //clear pokemoncards\r\n  countingPokemons = 0; //clear counting of pokemons\r\n}\r\n\r\nfunction paginationItemLoad(page) {\r\n  /*Load pokemons with a predefined offset */\r\n  let url = 'https://pokeapi.co/api/v2/pokemon?limit=20&offset=' + page; //generate adjusted url\r\n  defaultPage(); //clear all pokemoncards\r\n  fetchPokemonCardsDefault(url); //fetch the pokemons and cread new cards\r\n  document\r\n    .querySelectorAll('.pagination li')\r\n    .forEach((paginationItem) => paginationItem.classList.remove('active'));\r\n  window.scrollTo(0, 0); //scroll to top of the documemt\r\n}\r\n\r\nfunction paginationPrev() {\r\n  /* Jumps three pages to the front of all pokemons / one page contains 20 pokemons */\r\n\r\n  btnPaginationItem1.textContent = Number(btnPaginationItem1.textContent) - 3; //adjust PaginationItem Number -3\r\n  btnPaginationItem2.textContent = Number(btnPaginationItem2.textContent) - 3; //adjust PaginationItem Number -3\r\n  btnPaginationItem3.textContent = Number(btnPaginationItem3.textContent) - 3; //adjust PaginationItem Number -3\r\n  btnPaginationNext.parentNode.classList.remove('disabled'); //removes disabled class of Pagination Next Button\r\n  let page = Number(btnPaginationItem3.textContent) * 20 - 20; //calculate offset of pokemons\r\n  paginationItemLoad(page); //Load new page\r\n  btnPaginationItem3.parentElement.classList.add('active'); // Set pagination Item active --> always item 3\r\n  if (btnPaginationItem1.textContent === '1') {\r\n    btnPaginationPrev.parentNode.classList.add('disabled'); //if pagination is at start, prev button is disabled\r\n  }\r\n  window.scrollTo(0, 0); //scroll to top of the document\r\n}\r\n\r\nfunction paginationNext() {\r\n  /* Jumps three pages back of all pokemons / one page contains 20 pokemons */\r\n\r\n  btnPaginationItem1.textContent = Number(btnPaginationItem1.textContent) + 3; //adjust PaginationItem Number +3\r\n  btnPaginationItem2.textContent = Number(btnPaginationItem2.textContent) + 3; //adjust PaginationItem Number +3\r\n  btnPaginationItem3.textContent = Number(btnPaginationItem3.textContent) + 3; //adjust PaginationItem Number +3\r\n  btnPaginationPrev.parentNode.classList.remove('disabled'); //removes disabled class of Pagination Prev Button\r\n  let page = Number(btnPaginationItem1.textContent) * 20 - 20; //calculate offset of pokemons\r\n  paginationItemLoad(page); //Load new page\r\n  btnPaginationItem1.parentElement.classList.add('active'); // Set pagination Item active --> always item 1\r\n  if (btnPaginationItem2.textContent === '29') {\r\n    btnPaginationNext.parentNode.classList.add('disabled'); //if pagination is on end, next button is disabled\r\n  }\r\n  window.scrollTo(0, 0); //scroll to top\r\n}\r\n\r\n/*-------------------Main Program--------------------*/\r\n\r\n//Defaultpage\r\nfetchPokemonList();\r\nfetchPokemonCardsDefault('https://pokeapi.co/api/v2/pokemon?limit=20');\r\n\r\n//Eventlistener Search Button\r\nbtnSeachPokemon.addEventListener('click', searchPokemon);\r\n\r\n//Eventlistener Search Input and press Enter Button\r\ninputPokemonSearch.addEventListener('keyup', function (event) {\r\n  if (event.keyCode === 13) {\r\n    event.preventDefault();\r\n    searchPokemon();\r\n  }\r\n});\r\n\r\n//Eventlistener Pagination Prev: Jumps three pages to the front and adjusts the Pagination Items\r\nbtnPaginationPrev.addEventListener('click', function () {\r\n  if (!this.classList.contains('disabled')) {\r\n    //just possible to use if button is not disabled\r\n    paginationPrev(); //call function to jump three pages to the front\r\n  }\r\n});\r\n\r\n//Eventlistener Pagination Page : Page 1 --> Loads the first 20 pokemons\r\nbtnPaginationItem1.addEventListener(\r\n  'click',\r\n  function () {\r\n    if (!this.parentElement.classList.contains('active')) {\r\n      //Just change when item is not active\r\n      let page = Number(this.textContent) * 20 - 20; //Adjust url to offset\r\n      paginationItemLoad(page); //Load Page regarding offset\r\n      this.parentElement.classList.add('active'); //Set this item active\r\n    }\r\n  },\r\n  false\r\n);\r\n\r\n//Eventlistener Pagination Page : Page 2 --> Loads the second 20 pokemons\r\nbtnPaginationItem2.addEventListener(\r\n  'click',\r\n  function () {\r\n    if (!this.parentElement.classList.contains('active')) {\r\n      //Just change when item is not active\r\n      let page = Number(this.textContent) * 20 - 20; //Adjust url to offset\r\n      paginationItemLoad(page); //Load Page regarding offset\r\n      this.parentElement.classList.add('active'); //Set this item active\r\n    }\r\n  },\r\n  false\r\n);\r\n\r\n//Eventlistener Pagination Page : Page 3 --> Loads the third 20 pokemons\r\nbtnPaginationItem3.addEventListener(\r\n  'click',\r\n  function () {\r\n    if (!this.parentElement.classList.contains('active')) {\r\n      //Just change when item is not active\r\n      let page = Number(this.textContent) * 20 - 20; //Adjust url to offset\r\n      paginationItemLoad(page); //Load Page regarding offset\r\n      this.parentElement.classList.add('active'); //Set this item active\r\n    }\r\n  },\r\n  false\r\n);\r\n\r\n//Eventlistener Pagination Next: Jumps three pages back and adjusts the Pagination Items\r\nbtnPaginationNext.addEventListener('click', function () {\r\n  if (!this.classList.contains('disabled')) {\r\n    //just possible to use if button is not disabled\r\n    paginationNext(); //call function to jump three pages back\r\n  }\r\n});\r\n"]}